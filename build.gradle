plugins {
    id('fabric-loom').version('0.10-SNAPSHOT')
    id('maven-publish')
    id('org.ajoberstar.grgit').version('4.1.0')
}

if (project.java_version == "16") {
    sourceCompatibility = JavaVersion.VERSION_16
    targetCompatibility = JavaVersion.VERSION_16
} else if (project.java_version == "8") {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
} else {
    throw new GradleException("wrong java_version")
}

String real_version = "${project.mod_version}"


String getGitMetadata() {
    String ret = grgit.head().abbreviatedId
    if (!grgit.status().clean) {
        ret = new Date().format('yyyyMMdd.HHmmss') + ".dirty." + ret
    }
    return ret
}

if (project.pre_release != "") {
    real_version += "-${project.pre_release}+" + getGitMetadata()
}

version = "${project.minecraft_version}-${real_version}" as Object

group = project.maven_group


repositories {
    maven {
        url "https://www.cursemaven.com"
    }
}

dependencies {
    minecraft("com.mojang:minecraft:${project.minecraft_version}")
    mappings("net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_mappings}:v2")
    modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")
    modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

    // fabric-carpet
    modImplementation("curse.maven:carpet-349239:${project.carpet_core_version}")

    // multiconnect
    modImplementation("net.earthcomputer.multiconnect:multiconnect-api:${project.multiconnect_version}")
    include("net.earthcomputer.multiconnect:multiconnect-api:${project.multiconnect_version}")
}

loom {
    accessWidenerPath.set(file("src/main/resources/pca.accesswidener"))
}

processResources {
    inputs.property("version", real_version)
    filesMatching("fabric.mod.json") {
        expand(["version": real_version])
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (project.java_version == "16") {
        it.options.release.set(16)
    } else if (project.java_version == "8") {
        it.options.release.set(8)
    } else {
        throw new GradleException("wrong java_version")
    }
}

jar {
    from("LICENSE") {
        rename({ return "${it}_${project.archives_base_name}" })
    }
}
